% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_acls.R
\name{create_netacl_rule}
\alias{create_netacl_rule}
\alias{replace_netacl_rule}
\alias{delete_netacl_rule}
\title{ACL Rules}
\usage{
create_netacl_rule(
  acl,
  rule,
  cidr,
  port,
  protocol = "-1",
  action = c("allow", "deny"),
  direction = c("ingress", "egress"),
  ...
)

replace_netacl_rule(
  acl,
  rule,
  cidr,
  port,
  protocol = "-1",
  action = c("allow", "deny"),
  direction = c("ingress", "egress"),
  ...
)

delete_netacl_rule(
  acl,
  rule,
  protocol = "-1",
  direction = c("ingress", "egress"),
  ...
)
}
\arguments{
\item{acl}{\dots}

\item{rule}{A positive integer between 1 and 32766 to identify the rule. AWS advises staggering rule numbers (e.g., by 10s).}

\item{cidr}{A character string specifying a network range for the subnet in CIDR notation.}

\item{port}{A one- or two-element integer vector, specifying a port or port range.}

\item{protocol}{A character string specifying a protocol. A value of \dQuote{-1} (the default) means all protocols.}

\item{action}{A character vector specifying one of \dQuote{allow} (the default) or \dQuote{deny}.}

\item{direction}{A character vector specifying one of \dQuote{ingress} (the default) or `egress`.}

\item{...}{Additional arguments passed to [ec2HTTP()].}
}
\value{
A logical indicating whether the operation succeeded.
}
\description{
Set/Replace/Delete ACL Rules
}
\details{
Network ACL rules control inbound and outbound traffic. An ACL is, by default, created without any rules. `create_netacl_rule` adds a new rule. Each Network ACL rule consists of a a unique identifying number, an access protocol, an action (\dQuote{allow} or \dQuote{deny}), a direction (ingress or egress), a CIDR block, and a port range. Rules cannot be modified, but they can be deleted and replaced. `replace_netacl_rule` replaces an existing rule. `delete_netacl_rule` deletes an existing rule.
}
\examples{
\dontrun{
# create a VPC
v <- create_vpc(cidr = "10.0.0.0/16")
describe_vpcs()

# create a Network ACL for the VPC
acl <- create_netacl(v)

# add a rule
create_netacl_rule(acl, rule = 1000, cidr = "10.0.0.0/16", port = "80")

# retrieve the ACL (see rule is added)
describe_netacls(acl)

# replace the rule
replace_netacl_rule(acl, rule = 1000, cidr = "10.0.0.0/0", port = "32")

# cleanup
delete_netacl_rule(acl, 1000, protocol = "-1")
delete_netacl(acl)
delete_vpc(v)
}
}
\references{
<http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateNetworkAclEntry.html>
<http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ReplaceNetworkAclEntry.html>
<http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DeleteNetworkAclEntry.html>
}
\keyword{security}
